{
  "author": {
    "name": "Ajax.org B.V.",
    "email": "info@ajax.org"
  },
  "contributors": [
    {
      "name": "Tim Caswell",
      "email": "tim@c9.io"
    }
  ],
  "name": "vfs-http-adapter",
  "description": "A http middleware to wrap vfs instances and expose them via a RESTful interface",
  "version": "0.2.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/c9/vfs-http-adapter.git"
  },
  "main": "restful.js",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/c9/vfs-http-adapter/raw/master/LICENSE"
    }
  ],
  "engines": {
    "node": "*"
  },
  "readme": "# HTTP Adapter\n\nThis module is a connect/stack middleware module that wraps a vfs instance and\nserves it via a HTTP RESTful interface.\n\nThe module is a setup function that creates a middleware instance.\n\n```js\nvar root = \"http://localhost:8080/rest/\";\n\nvar vfs = require('vfs-local')({\n  root: process.cwd(),\n  httpRoot: root,\n});\n\nrequire('http').createServer(require('stack')(\n  require('vfs-http-adapter')(\"/rest/\", vfs)\n)).listen(8080);\n\nconsole.log(\"RESTful interface at \" + root);\n```\n\n## `HEAD /any/path`\n\nAll HEAD requests are converted to GET requests internally and act identical,\nexcept there is an internal flag in the vfs layer telling it to not stream the body.\n\n## `GET /path/to/file`\n\nServe a file to the client as a stream.  Supports etags and range requests.\n\n## `GET /directory/path/with/slash/`\n\nServe a directory listing as a JSON document.\n\nThis is served as a streaming json document with a weak etag (since the order\nof the entries is not defined.)  It supports conditional GET requests\n\nSee `vfs.readdir` below for the format of the JSON.\n\n## `PUT /path/to/file`\n\nRecieve a file from the client and save it to the vfs.  The file body is streamed.\n\n## `PUT /directory/path/with/slash/`\n\nCreate a directory\n\n## `DELETE /path/to/file`\n\nDelete a file.\n\n## `DELETE /directory/path/with/slash/`\n\nDelete a directory (not recursive)\n\n\n## `POST /path/to/target`\n\nPOST is used for various adhoc commands that are useful but don't fit well into\nthe RESTful paradigm.  The client sends a JSON body containing the request information.\n\nCurrently this includes:\n\n - {\"renameFrom\": from} - rename a file from `from` to `target`.\n - {\"copyFrom\": from} - copy a file from `from` to `target`.\n - {\"linkTo\": data} - create a symlink at `target` containing `data`.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/c9/vfs-http-adapter/issues"
  },
  "homepage": "https://github.com/c9/vfs-http-adapter",
  "_id": "vfs-http-adapter@0.2.3",
  "_from": "vfs-http-adapter@~0.2.3"
}
